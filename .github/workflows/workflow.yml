name: CI

on:
  push:
    branches: [ run_test ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      RAILS_ENV: test
      # Match database.yml expectations:
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      # Optional but helpful: make Rails use the service explicitly
      PGHOST: localhost
      PGPORT: 5432

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install JS deps
        run: yarn install --frozen-lockfile || yarn install

      - name: Disable Spring
        run: |
          bin/spring binstub --remove --all || true
          echo "DISABLE_SPRING=1" >> $GITHUB_ENV

      - name: Prepare DB
        run: bin/rails db:prepare

      - name: RuboCop
        run: bundle exec rubocop --force-exclusion vendor/*/** --out rubocop.txt

      - name: Brakeman
        run: bundle exec brakeman -q -w2 -o brakeman.json || true

      - name: RSpec
        run: bundle exec rspec --format documentation --out rspec.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            rubocop.txt
            brakeman.json
            rspec.txt
            coverage/
